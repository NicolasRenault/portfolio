---
import {
	defaultLang,
	getLangFromUrl,
	getUrlWithTranslation,
	switchLangFromUrl,
	isResumeEnable,
	getResumeLinkForLanguage,
} from "@utils";
import { astroI18n, t } from "astro-i18n";
import { Icon } from "astro-icon";

astroI18n.init(Astro);

const lang = getLangFromUrl(Astro.url);

/**
 * Remove the last slash from the pathname if it's the last character
 */
const lastSlashIndex = Astro.url.pathname.lastIndexOf("/");

let currentPathName = Astro.url.pathname;

if (lastSlashIndex > Astro.url.pathname.length - 2) {
	currentPathName = currentPathName.slice(0, lastSlashIndex);
}
---

<nav>
	<ul>
		<li class:list={[{ active: Astro.url.pathname == getUrlWithTranslation("", lang) }]}>
			<a href={getUrlWithTranslation("", lang)} title={t("navbar.homepage")}>
				{t("navbar.homepage")}
			</a>
		</li>

		<li class:list={[{ active: currentPathName == getUrlWithTranslation("projects", lang) }]}>
			<a href={getUrlWithTranslation("projects", lang)} title={t("navbar.projects")}>
				{t("navbar.projects")}
			</a>
		</li>
		{
			isResumeEnable() && (
				<li id="resume-link">
					<a
						href={getResumeLinkForLanguage(lang)}
						title={t("navbar.resume")}
						target="_blank"
					>
						{t("navbar.resume")}
					</a>
				</li>
			)
		}
		<li id="contact-link">
			<a
				href="mailto:contact.nicolasrenault@gmail.com?subject=Hello there!&body=Hey,"
				title={t("navbar.contact_me")}
				target="_blank"
				rel="noopener noreferrer"
			>
				{t("navbar.contact")}
			</a>
		</li>
	</ul>
	<div id="left-container">
		<a
			id="mobile-contact-link"
			class="icon"
			href="mailto:contact.nicolasrenault@gmail.com?subject=Hello there!&body=Hey,"
			title={t("navbar.contact_me")}
			target="_blank"
			rel="noopener noreferrer"
		>
			<Icon name="ic:baseline-alternate-email" />
		</a>
		<a
			id="github-link"
			class="icon"
			href="https://github.com/NicolasRenault"
			title={t("navbar.github_profile")}
			target="_blank"
		>
			<Icon name="codicon:github" />
		</a>
		<div id="translate-buttons-container">
			<a
				id="translation-link-en"
				href={"en" === lang ? "javascript:void(0)" : switchLangFromUrl(Astro.url, "en")}
				class:list={[{ disabled: "en" === lang }]}
				title={t("navbar.switch_language")}
			>
				en
			</a>
			<Icon name="ph:translate-bold" />
			<a
				id="translation-link-fr"
				href={"fr" === lang ? "javascript:void(0)" : switchLangFromUrl(Astro.url, "fr")}
				class:list={[{ disabled: "fr" === lang }]}
				title={t("navbar.switch_language")}
			>
				fr
			</a>
		</div>
		<a
			id="mobile-translation-link"
			href={switchLangFromUrl(Astro.url, lang === defaultLang ? "fr" : "en")}
			title={t("navbar.switch_language")}>{lang === defaultLang ? "fr" : "en"}</a
		>
	</div>
</nav>

<script>
	const nav = document.querySelector("nav");
	const mobileNavToggle = document.querySelector("#mobile-nav-toggle");

	mobileNavToggle?.addEventListener("click", () => {
		if (nav?.classList.contains("active")) {
			nav?.classList.remove("active");
		} else {
			nav?.classList.add("active");
		}
	});
</script>

<style lang="scss">
	nav {
		--font-size: 1.5rem;

		display: flex;
		justify-content: space-between;
		padding: 1rem 1.5rem 0 1.5rem;
		height: fit-content;
		align-items: center;
		font-size: var(--font-size);

		z-index: 9999;

		max-width: 85rem;
		margin-left: auto;
		margin-right: auto;

		ul {
			display: flex;
			align-items: center;
			gap: 5rem;
			list-style: none;

			li {
				position: relative;

				&::before {
					content: "";
					display: block;
					position: absolute;
					bottom: -0.25rem;
					margin-top: 0.5rem;
					width: 0;
					height: 3px;
					background: var(--text-rgb);
					transition: width 0.3s;
				}
				&.active::before {
					transition: width 0.4s;
				}

				&.active::after {
					content: "";
					display: block;
					position: absolute;
					bottom: -0.25rem;
					right: 0;
					margin-top: 0.5rem;
					width: 100%;
					height: 3px;
					background: var(--secondary-rgb);
					transition: width 0.5s;
				}

				@media (prefers-reduced-motion: no-preference) {
					&:hover::before {
						width: 100%;
					}
					&:hover::after {
						transition: width 0.3s;
						width: 0;
					}
				}
			}
		}

		a,
		button {
			text-decoration: none;
			color: var(--text-rgb);
			text-transform: uppercase;

			border: none;
			background: none;
		}

		#left-container {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 2rem;
			align-items: center;
			margin-right: 1rem;
			a,
			button {
				transition: transform 0.2s ease-in-out;

				&:hover {
					transform: translateY(-2px);
				}
			}

			.icon {
				display: flex;
				justify-content: flex-end;

				svg {
					width: var(--font-size);
					height: var(--font-size);
				}
			}

			#translate-buttons-container {
				font-size: calc(var(--font-size) + 0.1rem);
				display: grid;
				grid-template-columns: 1fr 1fr 1fr;
				gap: 0.3rem;
				align-items: center;

				a.disabled {
					pointer-events: none;
					opacity: 0.2;

					&:hover {
						transform: none;
					}
					&:focus {
						outline-color: gray;
					}
				}
			}

			// #mobile-resume-link,
			#mobile-contact-link,
			#mobile-translation-link {
				display: none;
			}
		}
	}

	#mobile-nav-toggle {
		display: none;
		z-index: calc(var(--zIndex) + 1);
	}

	@media (width <= 1024px) {
		nav {
			--font-size: 1.2rem;

			ul {
				padding: 0;
				gap: 3rem;
			}

			#left-container {
				margin-right: 0;
				gap: 1rem;
			}
		}
	}

	@media (width <= 680px) {
		nav {
			--font-size: 1rem;
			padding: 1rem 2rem;

			ul {
				gap: 1rem;
			}
		}
	}

	@media (width <= 480px) {
		nav {
			--font-size: 1.15rem;

			display: flex;

			position: fixed;
			width: 100vw;
			height: 7%;

			bottom: 50%;
			bottom: 0;
			left: 0;
			padding: 3px 0;

			background-color: var(--primary-rgb);
			border-top: solid 2px var(--text-dark-gray-rgb);

			&.active {
				transform: translateX(0);
			}

			ul {
				flex-direction: row;
				align-items: flex-start;
				gap: 0.6rem;
				margin: 0 0 0 0.5rem;

				// #resume-link,
				#contact-link {
					display: none;
				}
			}

			#left-container {
				display: flex;
				gap: 0.5rem;
				margin-right: 0.5rem;
				* {
					width: fit-content;
				}

				#translate-buttons-container {
					display: none;
				}

				// #mobile-resume-link,
				#mobile-contact-link,
				#mobile-translation-link {
					display: flex;

					svg {
						width: calc(var(--font-size) + 0.2rem);
						height: calc(var(--font-size) + 0.2rem);
					}
				}
			}
		}
	}

	@media (width <= 370px) {
		nav {
			--font-size: 0.95rem;
		}
	}

	//Make the nav disappear to avoir translate: transform and position: fixed issues
	body.navigateOnScroll nav {
		display: none;
	}
</style>
