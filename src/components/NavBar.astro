---
import {
	defaultLang,
	getLangFromUrl,
	getUrlWithTranslation,
	switchLangFromUrl,
	getResumeLinkForLanguage,
} from "@utils";
import { astroI18n, t } from "astro-i18n";
import { Icon } from "astro-icon";

astroI18n.init(Astro);

const lang = getLangFromUrl(Astro.url);

/**
 * Remove the last slash from the pathname if it's the last character
 */
const lastSlashIndex = Astro.url.pathname.lastIndexOf("/");

let currentPathName = Astro.url.pathname;

if (lastSlashIndex > Astro.url.pathname.length - 2) {
	currentPathName = currentPathName.slice(0, lastSlashIndex);
}

const zIndex = 1000;
---

<button id="mobile-nav-toggle">
	<Icon name="ci:hamburger" />
</button>

<nav>
	<ul>
		<li class:list={[{ active: Astro.url.pathname == getUrlWithTranslation("", lang) }]}>
			<a href={getUrlWithTranslation("", lang)} title={t("navbar.homepage")}>
				{t("navbar.homepage")}
			</a>
		</li>

		<li class:list={[{ active: currentPathName == getUrlWithTranslation("projects", lang) }]}>
			<a href={getUrlWithTranslation("projects", lang)} title={t("navbar.projects")}>
				{t("navbar.projects")}
			</a>
		</li>
		<li>
			<a href={getResumeLinkForLanguage(lang)} title={t("navbar.resume")} target="_blank">
				{t("navbar.resume")}
			</a>
		</li>
		<li>
			<a
				href="mailto:contact@nicolasrenault.com?subject=Hello there!&body=Hey,"
				title={t("navbar.contact_me")}
				target="_blank"
				rel="noopener noreferrer"
			>
				{t("navbar.contact")}
			</a>
		</li>
	</ul>
	<div id="left-container">
		<a
			id="github-link"
			href="https://github.com/NicolasRenault"
			title={t("navbar.github_profile")}
			target="_blank"
		>
			<Icon name="codicon:github" />
		</a>
		<a
			id="translation-link"
			href={switchLangFromUrl(Astro.url, lang === defaultLang ? "fr" : "en")}
			title={t("navbar.switch_language")}>{lang === defaultLang ? "fr" : "en"}</a
		>
		{/* TODO add toggle for horizontal scroll */}
	</div>
</nav>

<script>
	const nav = document.querySelector("nav");
	const mobileNavToggle = document.querySelector("#mobile-nav-toggle");

	mobileNavToggle?.addEventListener("click", () => {
		if (nav?.classList.contains("active")) {
			nav?.classList.remove("active");
		} else {
			nav?.classList.add("active");
		}
	});
</script>

<style lang="scss" define:vars={{ zIndex }}>
	nav {
		--font-size: 1.5rem;

		display: flex;
		justify-content: space-between;
		padding: 1rem 1.5rem 0 1.5rem;
		height: fit-content;
		align-items: center;
		font-size: var(--font-size);

		z-index: var(--zIndex);

		max-width: 85rem;
		margin-left: auto;
		margin-right: auto;

		ul {
			display: flex;
			align-items: center;
			gap: 5rem;
			list-style: none;

			li {
				position: relative;

				&::before {
					content: "";
					display: block;
					position: absolute;
					bottom: -0.25rem;
					margin-top: 0.5rem;
					width: 0;
					height: 3px;
					background: var(--text-rgb);
					transition: width 0.3s;
				}
				&.active::before {
					transition: width 0.4s;
				}
				&:hover::before {
					width: 100%;
				}

				&.active::after {
					content: "";
					display: block;
					position: absolute;
					bottom: -0.25rem;
					right: 0;
					margin-top: 0.5rem;
					width: 100%;
					height: 3px;
					background: var(--secondary-rgb);
					transition: width 0.5s;
				}
				&:hover::after {
					transition: width 0.3s;
					width: 0;
				}
			}
		}

		a,
		button {
			text-decoration: none;
			color: var(--text-rgb);
			text-transform: uppercase;

			border: none;
			background: none;
		}

		#left-container {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 2rem;
			align-items: center;
			margin-right: 1rem;
			a,
			button {
				transition: transform 0.2s ease-in-out;

				&:hover {
					transform: translateY(-2px);
				}
			}

			#github-link {
				display: flex;

				svg {
					width: var(--font-size);
					height: var(--font-size);
				}
			}
		}
	}

	#mobile-nav-toggle {
		display: none;
		z-index: calc(var(--zIndex) + 1);
	}

	@media (max-width: 1024px) {
		nav {
			--font-size: 1.2rem;

			ul {
				padding: 0;
				gap: 3rem;
			}

			#left-container {
				margin-right: 0;
				gap: 1rem;
			}
		}
	}

	@media (max-width: 680px) {
		nav {
			--font-size: 1rem;
			padding: 1rem 2rem;

			ul {
				gap: 1rem;
			}
		}
	}

	@media (max-width: 480px) {
		#mobile-nav-toggle {
			display: block !important;
			position: absolute;
			top: 0.75rem;
			right: 0.75rem;

			border: none;
			background: none;
			color: var(--text-rgb);

			svg {
				width: 2rem;
				height: 2rem;
			}
		}

		nav {
			--font-size: 1.5rem;

			display: block;

			position: absolute;
			width: 40%;
			height: 100vh;

			top: 0;
			right: 0;

			background-color: var(--secondary-rgb);
			transition: transform 0.3s ease-in-out;

			overflow: hidden;
			transform: translateX(100%);

			&.active {
				transform: translateX(0);
			}

			ul {
				flex-direction: column;
				align-items: flex-start;
				gap: 1rem;
				padding-top: 1rem;

				li {
					&:hover {
						&::before {
							background-color: var(--primary-light-rgb);
						}
					}

					&.active::after {
						background: var(--text-rgb);
					}
				}
			}

			#left-container {
				grid-template-columns: 1fr;
				* {
					width: fit-content;
				}
			}

			*::selection {
				background-color: var(--primary-light-rgb);
				color: var(--text-rgb);
			}

			:focus-visible {
				color: var(--primary-light-rgb) !important;
				border: none;
				outline: dashed 3px var(--primary-rgb);
				font-weight: bolder;
			}
		}
	}
</style>
